# Generated by Django 5.2.7 on 2025-10-07 14:55

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0002_orders_shipping_cost_orders_subtotal'),
    ]

    operations = [
        migrations.CreateModel(
            name='ShippingConstants',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('boda_max_weight_kg', models.DecimalField(decimal_places=2, default=Decimal('15.00'), help_text='Maximum weight (kg) for boda boda delivery', max_digits=5)),
                ('boda_max_length_cm', models.DecimalField(decimal_places=2, default=Decimal('60.00'), help_text='Maximum length (cm) for boda boda delivery', max_digits=6)),
                ('boda_max_width_cm', models.DecimalField(decimal_places=2, default=Decimal('40.00'), help_text='Maximum width (cm) for boda boda delivery', max_digits=6)),
                ('boda_max_height_cm', models.DecimalField(decimal_places=2, default=Decimal('40.00'), help_text='Maximum height (cm) for boda boda delivery', max_digits=6)),
                ('van_max_weight_kg', models.DecimalField(decimal_places=2, default=Decimal('500.00'), help_text='Maximum weight (kg) for van/pickup delivery', max_digits=6)),
                ('van_max_length_cm', models.DecimalField(decimal_places=2, default=Decimal('200.00'), max_digits=6)),
                ('van_max_width_cm', models.DecimalField(decimal_places=2, default=Decimal('150.00'), max_digits=6)),
                ('van_max_height_cm', models.DecimalField(decimal_places=2, default=Decimal('150.00'), max_digits=6)),
                ('truck_max_weight_kg', models.DecimalField(decimal_places=2, default=Decimal('2000.00'), help_text='Maximum weight (kg) for truck delivery', max_digits=7)),
                ('helper_fee_ugx', models.DecimalField(decimal_places=2, default=Decimal('15000.00'), help_text='Fee for delivery helper/assembly assistance', max_digits=10)),
                ('extra_care_fee_ugx', models.DecimalField(decimal_places=2, default=Decimal('5000.00'), help_text='Fee for fragile/valuable item handling', max_digits=10)),
            ],
            options={
                'verbose_name': 'Shipping Constants',
                'verbose_name_plural': 'Shipping Constants',
                'db_table': 'shipping_constants',
            },
        ),
        migrations.CreateModel(
            name='ShippingZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone_code', models.CharField(help_text='Unique zone code (e.g., KLA-1, KLA-2)', max_length=20, unique=True)),
                ('zone_name', models.CharField(help_text='Display name (e.g., Kampala Central)', max_length=100)),
                ('distance_range_min_km', models.DecimalField(decimal_places=2, help_text='Minimum distance from origin (km)', max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('distance_range_max_km', models.DecimalField(decimal_places=2, help_text='Maximum distance from origin (km)', max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('standard_delivery_days', models.IntegerField(default=1, help_text='Estimated delivery days for standard shipping', validators=[django.core.validators.MinValueValidator(1)])),
                ('express_delivery_days', models.IntegerField(default=0, help_text='Estimated delivery days for express shipping (0 = same day)', validators=[django.core.validators.MinValueValidator(0)])),
                ('description', models.TextField(blank=True, help_text='Additional zone information')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this zone is currently serviced')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Shipping Zone',
                'verbose_name_plural': 'Shipping Zones',
                'db_table': 'shipping_zone',
                'ordering': ['distance_range_min_km'],
            },
        ),
        migrations.CreateModel(
            name='ShippingRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_method', models.CharField(choices=[('boda', 'Boda Boda'), ('van', 'Van/Pickup'), ('truck', 'Truck')], max_length=20)),
                ('service_level', models.CharField(choices=[('standard', 'Standard'), ('express', 'Express')], max_length=20)),
                ('base_price_ugx', models.DecimalField(decimal_places=2, help_text='Base delivery fee in UGX', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('per_km_price_ugx', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Additional per-kilometer charge (mainly for van/truck)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('min_delivery_hours', models.IntegerField(blank=True, help_text='Minimum delivery time in hours', null=True)),
                ('max_delivery_hours', models.IntegerField(blank=True, help_text='Maximum delivery time in hours', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this rate is currently offered')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('zone', models.ForeignKey(db_column='zone_id', on_delete=django.db.models.deletion.CASCADE, related_name='rates', to='shipping.shippingzone')),
            ],
            options={
                'verbose_name': 'Shipping Rate',
                'verbose_name_plural': 'Shipping Rates',
                'db_table': 'shipping_rate',
                'ordering': ['zone', 'delivery_method', 'service_level'],
                'unique_together': {('zone', 'delivery_method', 'service_level')},
            },
        ),
        migrations.CreateModel(
            name='OrderShippingMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_method', models.CharField(choices=[('boda', 'Boda Boda'), ('van', 'Van/Pickup'), ('truck', 'Truck')], max_length=20)),
                ('service_level', models.CharField(choices=[('standard', 'Standard'), ('express', 'Express')], max_length=20)),
                ('base_shipping_cost_ugx', models.DecimalField(decimal_places=2, help_text='Base shipping cost before additional fees', max_digits=10)),
                ('helper_fee_ugx', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Helper/assembly fee if applicable', max_digits=10)),
                ('extra_care_fee_ugx', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Extra care fee if applicable', max_digits=10)),
                ('total_shipping_cost_ugx', models.DecimalField(decimal_places=2, help_text='Total shipping cost (base + helper + extra care)', max_digits=10)),
                ('total_weight_kg', models.DecimalField(decimal_places=2, help_text='Total weight of shipment', max_digits=8)),
                ('total_volume_m3', models.DecimalField(decimal_places=4, help_text='Total volume of shipment in cubic meters', max_digits=8)),
                ('calculation_notes', models.JSONField(blank=True, default=dict, help_text='Details about how shipping method was determined')),
                ('estimated_delivery_date', models.DateField(blank=True, help_text='Estimated delivery date', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.OneToOneField(db_column='order_id', on_delete=django.db.models.deletion.CASCADE, related_name='shipping_details', to='orders.orders')),
                ('rate', models.ForeignKey(blank=True, db_column='rate_id', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='order_shipments', to='shipping.shippingrate')),
                ('zone', models.ForeignKey(db_column='zone_id', on_delete=django.db.models.deletion.PROTECT, related_name='order_shipments', to='shipping.shippingzone')),
            ],
            options={
                'verbose_name': 'Order Shipping Method',
                'verbose_name_plural': 'Order Shipping Methods',
                'db_table': 'order_shipping_method',
            },
        ),
        migrations.CreateModel(
            name='ZoneArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_name', models.CharField(help_text='Area, neighborhood, or landmark name', max_length=100)),
                ('keywords', models.JSONField(blank=True, default=list, help_text='Alternative spellings or search keywords for matching')),
                ('is_landmark', models.BooleanField(default=False, help_text='Is this a major landmark vs a neighborhood?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('zone', models.ForeignKey(db_column='zone_id', on_delete=django.db.models.deletion.CASCADE, related_name='areas', to='shipping.shippingzone')),
            ],
            options={
                'verbose_name': 'Zone Area',
                'verbose_name_plural': 'Zone Areas',
                'db_table': 'zone_area',
                'ordering': ['area_name'],
                'unique_together': {('zone', 'area_name')},
            },
        ),
    ]
